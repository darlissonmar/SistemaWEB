<?require_once("class.DAO.php");class DisciplinaDAO extends DAO {	public function gravaDadosDisciplina(Disciplina $disciplina){		$banco = $this->getBancoDados(); 		$sincroniza = "";														$query = "	SELECT count(*) AS total					FROM tb_disciplina_and_tb_area					WHERE tb_disciplina_id IN (						SELECT tb_disciplina_id						FROM tb_disciplina						WHERE tb_disciplina_nome LIKE '".$disciplina->getNome()."')					AND tb_area_id = '$disciplina->tmpIdArea'";			if (strlen($disciplina->getId())>0){			$query .= " AND   tb_disciplina_id   <> ".$disciplina->getId();		}				$retorno = $banco->executaSQL($query);	if ($banco->numRows($retorno) == 0){			throw new Exception("Erro inesperado ao salvar informações da Disciplina. Tente novamente.",0);	}		$linha = $banco->fetchArray($retorno);		if ($linha['total'] > 0){			throw new Exception("Já existe uma disciplina com esse nome para essa área. Operação sem sucesso",0);		}		if (($disciplina->getId()) > 0){			$query = " UPDATE tb_disciplina						SET tb_disciplina_nome  = $disciplina->tmpNome						WHERE tb_disciplina_id  = ".$disciplina->getId()."";								$sincroniza .= "UPDATE tb_disciplina_and_tb_area						SET tb_area_id 			= $disciplina->tmpIdArea						WHERE tb_disciplina_id  = ".$disciplina->getId()."";								}else{			$query = "INSERT INTO tb_disciplina (							tb_user_id,							tb_disciplina_nome					) VALUES (							$disciplina->tmpUsuario,							$disciplina->tmpNome							)";										$sincroniza .= " INSERT INTO 						tb_disciplina_and_tb_area(						tb_disciplina_id	,						tb_area_id						)VALUES (						LAST_INSERT_ID(),						$disciplina->tmpIdArea )";										}		if(!$banco->atualizaSQL($query)) {			throw new Exception("Erro ao atualizar / inserir Disciplina. ($query) "); 		}						if(!$banco->executaSQL($sincroniza)) {			throw new Exception("Erro ao sincronizar disciplina e área. ($sincroniza)"); 			}			}//================================================================================	public function recuperarDisciplina($id_disciplina){		$query ="SELECT tb_disciplina.tb_disciplina_nome    	AS disciplina,						tb_disciplina.tb_user_id        		AS usuario,						tb_disciplina.tb_disciplina_data_cad    AS data				FROM tb_disciplina				WHERE tb_disciplina.tb_disciplina_id = '$id_disciplina' ";		$banco = $this->getBancoDados(); 		$disciplina = NULL; 		$retorno = $banco->executaSQL($query); 				if($retorno != NULL) {			if ($banco->numRows($retorno) == 0){				throw new Exception("Nenhuma disciplina encontrada.",0);			}			while($linha = $banco->fetchArray($retorno)) { 				$disciplina = new Disciplina(); 				$disciplina->setId($id_disciplina);				$disciplina->setNome($linha['disciplina']);				$disciplina->setUsuario($linha["usuario"]);				$disciplina->setData($linha["data"]);			}						$query2 = "SELECT tb_area_id AS area_id				   FROM tb_disciplina_and_tb_area				   WHERE tb_disciplina_id = '$id_disciplina'";						$retorno2 = $banco->executaSQL($query2);						$linha2 = $banco->fetchArray($retorno2);			$disciplina->setIdArea($linha2['area_id']);						return $disciplina; 		} else {			throw new Exception("Erro ao recuperar Disciplina ($query)"); 		}	}	//===============================================================================public function recuperarDisciplinaAssunto($id_assunto){		$query ="SELECT *				FROM tb_disciplina				WHERE tb_disciplina_id = (SELECT tb_disciplina_id											FROM tb_assunto_and_tb_disciplina											WHERE tb_assunto_id = $id_assunto)";		$banco = $this->getBancoDados(); 		$disciplina = NULL; 		$retorno = $banco->executaSQL($query); 				if($retorno != NULL) {			if ($banco->numRows($retorno) == 0){				throw new Exception("Nenhuma disciplina encontrada.",0);			}			while($linha = $banco->fetchArray($retorno)) { 				$disciplina = new Disciplina(); 				$disciplina->setId($linha['tb_disciplina_id']);				$disciplina->setNome($linha['tb_disciplina_nome']);				$disciplina->setUsuario($linha["tb_user_id"]);							}											return $disciplina; 		} else {			throw new Exception("Erro ao recuperar Disciplina ($query)"); 		}	}//================================================================================	public function recuperarTodos() {		$banco = $this->getBancoDados(); 		$sql = "SELECT tb_disciplina_id				FROM tb_disciplina 				ORDER BY tb_disciplina_nome ASC"; 		$retorno = $banco->executaSQL($sql);		if($retorno != NULL) {			$disciplina = NULL;			$i = "0";			if ($banco->numRows($retorno) == 0 ){				throw new Exception("Nenhuma Disciplina cadastrada. Para realizar esta operação, acesse o Menu cadastrar / Disciplina.",0);			}			while($linha = mysql_fetch_array($retorno)) {				$disciplinas[$i++] = $this->recuperarDisciplina($linha["tb_disciplina_id"]);			}			return $disciplinas;		} else {			throw new Exception("Erro em query da recuperaçãode todas as disciplinas. ($sql)"); 		}	}//================================================================================	public function recuperarQtde() {		$banco = $this->getBancoDados(); 		$sql = "SELECT count(*) AS qtde				FROM tb_disciplina";				$retorno = $banco->executaSQL($sql);		if($retorno != NULL) {			$linha = mysql_fetch_array($retorno);			return $linha['qtde'];		} else {			throw new Exception("Erro em query da recupeção da qtde de disciplinas"); 		}	}	//================================================================================	public function excluirDisciplinaDAO($disciplina_id){		$banco = $this->getBancoDados(); 		$query = " DELETE FROM tb_disciplina					WHERE tb_disciplina_id = ".$disciplina_id;				if(!$banco->executaSQL($query)) {			throw new Exception("Erro ao excluir disciplina. (".$banco->mysql_error().")"); 			}	}		}?>