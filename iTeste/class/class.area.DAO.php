<?php 	class AreaDAO extends DAO {					public function gravaDadosArea(Area $area){		$banco = $this->getBancoDados(); 			$query = "	SELECT count(*) AS total					FROM tb_area					WHERE tb_area_nome LIKE ".$area->tmpNome."";						if (strlen($area->getId())>0){			$query .= " AND   tb_area_id   <> ".$area->getId();		}				$retorno = $banco->executaSQL($query); 		if ($banco->numRows($retorno) == 0){			throw new Exception("Erro inesperado ao salvar informações da área.Tente novamente.",0);	}			$linha = $banco->fetchArray($retorno); 		if ($linha['total']>0){			throw new Exception("Já existe uma área com esse nome. O nome da área deve ser único. Operação sem sucesso",0);		}				if (($area->getId())>0){				$query = " UPDATE tb_area SET							tb_area_nome       = $area->tmpNome							WHERE tb_area_id   = ".$area->getId()."";								if(!$banco->atualizaSQL($query)) {					throw new Exception("Erro ao atualizar a �rea. ($query) "); 				}		}else{				$query = "INSERT INTO tb_area (tb_user_id,								tb_area_nome						) VALUE (								$area->tmpUsuario,								$area->tmpNome							)";				if(!$banco->atualizaSQL($query)) {					throw new Exception("Erro ao inserir a área . ($query) ".$banco->mysql_error()); 				}						}	}	public function recuperarArea( $id_area ){		$query ="SELECT tb_area.tb_area_nome            AS nome,						tb_area.tb_user_id         		AS usuario,						tb_area.tb_area_data_cad        AS data				FROM tb_area				WHERE tb_area_id = $id_area ";		$banco = $this->getBancoDados(); 		$area = NULL; 		$retorno = $banco->executaSQL($query); 		if($retorno != NULL) {			if ($banco->numRows($retorno) == 0){				throw new Exception("Nenhuma área encontrada.",0);			}			while($linha = $banco->fetchArray($retorno)) { 				$area = new Area(); 				$area->setId($id_area);				$area->setNome($linha['nome']);				$area->setUsuario($linha["usuario"]);				$area->setData($linha["data"]);			}			return $area; 		} else {			throw new Exception("Erro ao recuperar área ($query)"); 		}	}	public function recuperarAreaDisciplina( $id_disciplina ){		$query ="SELECT *				FROM tb_area				WHERE tb_area_id = (SELECT tb_area_id									FROM tb_disciplina_and_tb_area									WHERE tb_disciplina_id = $id_disciplina)";					$banco = $this->getBancoDados(); 		$area = NULL; 		$retorno = $banco->executaSQL($query); 		if($retorno != NULL) {			if ($banco->numRows($retorno) == 0){				throw new Exception("Nenhuma área encontrada.",0);			}			while($linha = $banco->fetchArray($retorno)) { 				$area = new Area(); 				$area->setId($linha['tb_area_id']);				$area->setNome($linha['tb_area_nome']);				$area->setUsuario($linha["tb_user_id"]);			}			return $area; 		} else {			throw new Exception("Erro ao recuperar área ($query)"); 		}	}	public function recuperarTodos() {		$sql = "SELECT *				FROM tb_area 				ORDER BY tb_area_nome ASC"; 				$banco = $this->getBancoDados(); 		$retorno = $banco->executaSQL($sql);		if($retorno != NULL) {			$areas = NULL;			$i = 0;						if ($banco->numRows($retorno) == 0 ){				throw new Exception("Nenhuma área encontrada. é necessário cadastrar para realizar esta operação. Acesse o menu Cadastrar / Area",0);			}			while($linha = mysql_fetch_array($retorno)) {				$areas[$i++] = $this->recuperarArea($linha["tb_area_id"]);			}			return $areas;		} else {			throw new Exception("Erro em query da recuperação de todas as áreas"); 		}	}	public function recuperarQtde() {		$banco = $this->getBancoDados(); 		$sql = "SELECT count(*) AS qtde				FROM tb_area";				$retorno = $banco->executaSQL($sql);		if($retorno != NULL) {			$linha = mysql_fetch_array($retorno);			return $linha['qtde'];		} else {			throw new Exception("Erro em query da recuperação de qtde de area "); 		}	}	public function excluirAreaDAO($id_area){		$banco = $this->getBancoDados(); 		$query = " DELETE FROM tb_area					WHERE tb_area_id = ".$id_area;				if(!$banco->executaSQL($query)) {			throw new Exception("Erro ao excluir área. (".$banco->mysql_error().")"); 			}	}}?>